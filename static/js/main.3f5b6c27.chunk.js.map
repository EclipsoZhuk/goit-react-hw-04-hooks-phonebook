{"version":3,"sources":["components/App/App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmitData","reset","this","contactForm","type","onSubmit","pattern","title","required","onChange","Component","ContactList","contacts","onDeleteContact","map","buttonDelete","onClick","Filter","text","placeholder","App","initialContacts","filter","formSubmitHandler","data","some","el","toLowerCase","alert","elementDelete","arr","idContact","setFilterToState","filterData","getVisibleContact","includes","changeFilter","currentTarget","prevState","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f5b6c27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__Yn6Ka\",\"contactTitle\":\"App_contactTitle__AnMqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3umZX\",\"value\":\"Filter_value__3DhRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1uYwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__18KC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"ContactList_buttonDelete__2WgOJ\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n    <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmitData: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = e => {\n        const { name, number } = this.state;\n        e.preventDefault();\n\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n        this.props.onSubmitData(contact);\n        this.reset();\n    };\n\n    reset = () => this.setState({ name: '', number: '' });\n\n    render() {\n        const { handleSubmit, handleChange } = this;\n        const { name, number } = this.state;\n\n        return (\n            <div className={s.contactForm}>\n                <form type=\"submit\" onSubmit={handleSubmit}>\n                    <label>\n                        Name\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            onChange={handleChange}\n                            value={name}\n                        />\n                    </label>\n                    <label>\n                        Number\n                        <input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                            required\n                            onChange={handleChange}\n                            value={number}\n                        />\n                    </label>\n\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li key={id}>\n                    {`${name}: ${number}`}\n                    <button\n                        className={s.buttonDelete}\n                        type=\"button\"\n                        onClick={() => onDeleteContact(id)}\n                    >\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <label className={s.text}>\n            Find contacts by name\n            <input\n                placeholder=\"Search\"\n                className={s.value}\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport initialContacts from '../../contacts.json';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nclass App extends Component {\n    state = {\n        contacts: initialContacts,\n        filter: '',\n    };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parseContacts = JSON.parse(contacts);\n        if (parseContacts) {\n            this.setState({ contacts: parseContacts });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    formSubmitHandler = data => {\n        const comparableEl = this.state.contacts.some(\n            el => el.name.toLowerCase() === data.name.toLowerCase(),\n        );\n        if (comparableEl) {\n            return alert(' Контакт вже є у телефонній книзі!!!');\n        }\n\n        this.setState(({ contacts }) => ({\n            contacts: [data, ...contacts],\n        }));\n    };\n\n    elementDelete = (arr, idContact) => arr.filter(el => el.id !== idContact);\n\n    setFilterToState = filterData =>\n        this.setState({ ...this.state, filter: `${filterData}` });\n\n    getVisibleContact = () => {\n        const { filter, contacts } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    changeFilter = e => this.setState({ filter: e.currentTarget.value });\n\n    onDeleteContact = idContact => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== idContact,\n            ),\n        }));\n    };\n\n    render() {\n        const {\n            formSubmitHandler,\n            changeFilter,\n            onDeleteContact,\n            getVisibleContact,\n        } = this;\n        const { filter } = this.state;\n\n        return (\n            <Container>\n                <h1 className={s.title}>Phonebook</h1>\n                <ContactForm onSubmitData={formSubmitHandler} />\n                <h2 className={s.contactTitle}>Contacts</h2>\n                <Filter value={filter} onChange={changeFilter} />\n                <ContactList\n                    contacts={getVisibleContact()}\n                    onDeleteContact={onDeleteContact}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}